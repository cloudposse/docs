repositories:
- name: "coreos-stable"
  url: "https://s3-eu-west-1.amazonaws.com/coreos-charts/stable"

releases:
- name: "kube-prometheus"
  namespace: "monitoring"
  labels:
    chart: "kube-prometheus"
    component: "monitoring"
    namespace: "monitoring"
    vendor: "coreos"
    default: "true"
  chart: "coreos-stable/kube-prometheus"
  version: "0.0.66"
  set:
    - name: "global.rbacEnable"
      value: "false"

    - name: "deployExporterNode"
      value: "true"

    - name: "exporter-node.resources.limits.cpu"
      value: "10m"

    - name: "exporter-node.resources.limits.memory"
      value: "32Mi"

    - name: "exporter-node.resources.requests.cpu"
      value: "5m"

    - name: "exporter-node.resources.requests.memory"
      value: "16Mi"

    - name: "deployGrafana"
      value: "true"

    - name: "grafana.resources.limits.cpu"
      value: "50m"

    - name: "grafana.resources.limits.memory"
      value: "64Mi"

    - name: "grafana.resources.requests.cpu"
      value: "10m"

    - name: "grafana.resources.requests.memory"
      value: "64Mi"

    - name: "exporter-kube-state.resources.limits.cpu"
      value: "50m"

    - name: "exporter-kube-state.resources.limits.memory"
      value: "64Mi"

    - name: "exporter-kube-state.resources.requests.cpu"
      value: "10m"

    - name: "exporter-kube-state.resources.requests.memory"
      value: "64Mi"

    # AlertManager
    - name: "deployAlertManager"
      value: "true"

    - name: "alertmanager.paused"
      value: "false"

    - name: "alertmanager.podAntiAffinity"
      value: "soft"

    - name: "alertmanager.replicaCount"
      value: '4'

    - name: "alertmanager.image.repository"
      value: "quay.io/prometheus/alertmanager"

    - name: "alertmanager.image.tag"
      value: 'v0.14.0'

    - name: "alertmanager.image.pullPolicy"
      value: "IfNotPresent"

    - name: "alertmanager.resources.limits.cpu"
      value: "10m"

    - name: "alertmanager.resources.limits.memory"
      value: "64Mi"

    - name: "alertmanager.resources.requests.cpu"
      value: "5m"

    - name: "alertmanager.resources.requests.memory"
      value: "32Mi"

    - name: "alertmanager.config.global.resolve_timeout"
      value: "5m"

    - name: "alertmanager.config.route.group_by[0]"
      value: "alertname"

    - name: "alertmanager.config.route.group_by[1]"
      value: "namespace"

    - name: "alertmanager.config.route.group_wait"
      value: "30s"

    - name: "alertmanager.config.route.group_interval"
      value: "5m"

    - name: "alertmanager.config.route.repeat_interval"
      value: "12h"

    - name: "alertmanager.config.route.receiver"
      value: "slack_general"

    - name: "alertmanager.config.route.routes[0].match.alertname"
      value: "DeadMansSwitch"

    - name: "alertmanager.config.route.routes[0].match.receiver"
      value: "null"

    - name: "alertmanager.config.receivers[0].name"
      value: "null"

    - name: "alertmanager.config.receivers[1].name"
      value: "slack_general"

    - name: "alertmanager.config.receivers[1].slack_configs[0].api_url"
      value: 'https://hooks.slack.com/services/XXXXXXXXX/XXXXXXXXX/XXXXXXXXXXXXXXXXXXXXXXXX'

    - name: "alertmanager.config.receivers[1].slack_configs[0].channel"
      value: '#alerts-staging'

    - name: "alertmanager.config.receivers[1].slack_configs[0].send_resolved"
      value: "true"

    - name: "alertmanager.service.type"
      value: "ClusterIP"

    - name: "alertmanager.service.port"
      value: "80"

    - name: "alertmanager.ingress.enabled"
      value: "false"

    # Prometheus
    - name: "prometheus.retention"
      value: "31d"

    - name: "prometheus.routePrefix"
      value: "/"

    - name: "prometheus.config.specifiedInValues"
      value: "true"

    - name: "prometheus.rules.specifiedInValues"
      value: "true"

    - name: "prometheus.paused"
      value: "false"

    - name: "prometheus.podAntiAffinity"
      value: "soft"

    - name: "prometheus.replicaCount"
      value: '4'

    - name: "prometheus.image.repository"
      value: "quay.io/prometheus/prometheus"

    - name: "prometheus.image.tag"
      value: 'v2.2.1'

    - name: "prometheus.image.pullPolicy"
      value: "IfNotPresent"

    - name: "prometheus.resources.limits.cpu"
      value: "400m"

    - name: "prometheus.resources.limits.memory"
      value: "2048Mi"

    - name: "prometheus.resources.requests.cpu"
      value: "100m"

    - name: "prometheus.resources.requests.memory"
      value: "512Mi"

    - name: "prometheus.storageSpec.volumeClaimTemplate.spec.accessModes[0]"
      value: "ReadWrite"

    - name: "prometheus.storageSpec.volumeClaimTemplate.spec.resources.requests.storage"
      value: "50Gi"

    - name: "prometheus.service.type"
      value: "ClusterIP"

    - name: "prometheus.service.port"
      value: "80"

    - name: "prometheus.ingress.enabled"
      value: "false"
