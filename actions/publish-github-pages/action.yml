name: 'Publish GitHub Pages'
description: 'Publish the Hugo-based CloudPosse docs website to GitHub Pages.'
runs:
#  using: 'docker'
#  image: 'Dockerfile'
  using: 'composite'
  steps:
    - shell: bash
      run: |
#!/bin/bash
set -e

# Parameter with default:
HUGO_REPO=${HUGO_REPO:-https://github.com/cloudposse/docs}

# Hardcoded parameters:
GITHUB_PAGES_PULL_PATH=/tmp/master/ # This will contain the master branch of GITHUB_PAGES_REPO.
GITHUB_PAGES_HUGO_PATH=/tmp/hugo/ # This will contain the generic infrastructure needed to build the GitHub Pages site. 
GITHUB_PAGES_PUSH_PATH=$(pwd)/${GITHUB_PAGES_DIRECTORY}/ # This will contain the GitHub Pages deployment branch of GITHUB_PAGES_REPO.
GIT_USER_EMAIL=github-actions-runner@cloudposse.com
GIT_USER_NAME=github-actions-runner
STAGING_DIR=/tmp/staging/ # Staging directory used for preparing files before hugo generation

# #### PROGRAM LOGIC ####
main() {
    # Check out
    # 1) Essential Hugo build tools
    git clone $HUGO_REPO $GITHUB_PAGES_HUGO_PATH
    # 2) Site-specific documentation
    git clone $GITHUB_PAGES_REPO $GITHUB_PAGES_PULL_PATH
    # 3) The GitHub Pages deployment branch for this site
    git clone --branch $GITHUB_PAGES_BRANCH $GITHUB_PAGES_REPO $GITHUB_PAGES_PUSH_PATH

    # Create a separate build folder, ${STAGING_DIR}, and populate it with the essential files from HUGO_REPO
    # (The rest of this script assumes HUGO_REPO=https://github.com/cloudposse/docs.)
    mkdir ${STAGING_DIR}
    cp -r ${GITHUB_PAGES_HUGO_PATH}/tasks/ ${STAGING_DIR}
    cp -r ${GITHUB_PAGES_HUGO_PATH}/themes/ ${STAGING_DIR}
    cp -r ${GITHUB_PAGES_HUGO_PATH}/static/ ${STAGING_DIR}
    cp -r ${GITHUB_PAGES_HUGO_PATH}/layouts/ ${STAGING_DIR}
    cp -r ${GITHUB_PAGES_HUGO_PATH}/content/ ${STAGING_DIR}
    cp -r ${GITHUB_PAGES_HUGO_PATH}/Dockerfile ${STAGING_DIR}
    cp -r ${GITHUB_PAGES_HUGO_PATH}/.gitignore ${STAGING_DIR}
    cp ${GITHUB_PAGES_HUGO_PATH}/config.yaml ${STAGING_DIR}
    cp ${GITHUB_PAGES_HUGO_PATH}/.htmltest.yml ${STAGING_DIR}
    cp ${GITHUB_PAGES_HUGO_PATH}/Makefile ${STAGING_DIR}
    # The following two lines can be removed once this branch is merged into master
    sed -i 's/yq eval/yq -M eval/' ${STAGING_DIR}Makefile # this can be removed once this branch is merged into master
    sed -i 's/^export DOCKER_RUN_FLAGS ?= -it --rm$/export DOCKER_RUN_FLAGS ?= --rm/' ${STAGING_DIR}Makefile

    # copy all customer documentation into the build folder
    IFS="," read -r -a CONTENT_ARRAY <<< "$CONTENT"
    for content in "${CONTENT_ARRAY[@]}"; do
        # clear files needed for storing intermediate variables
        rm file_origins.txt file_destinations.txt
        # rename all `README.md` to `_index.md`
        find ${GITHUB_PAGES_PULL_PATH}${content} -type f -name README.md -print0 | xargs --null -I{} bash -c 'mv {} $(dirname {})/_index.md'
        # categories with no subfolders, and only a single `_index.md`: `mv foobar/_index.md foobar.md`
        find ${GITHUB_PAGES_PULL_PATH}${content} -type f -name _index.md -print0 | xargs --null -I{} bash -c 'if [ "$(ls -1q $(dirname {}) | wc -l)" == "1" ]; then echo "$(dirname {})"; mv {} $(dirname $(dirname {}))/$(basename $(dirname {})).md; rm -r $(dirname {}); ls $(dirname $(dirname {})); fi'
        # install the customer docs (.md pages) to the content folder
        find ${GITHUB_PAGES_PULL_PATH}${content} -type f -name "*.md" >> file_origins.txt
        find ${GITHUB_PAGES_PULL_PATH}${content} -type f -name "*.md" -print0 | xargs --null -I{} bash -c 'echo "${STAGING_DIR}content/{}"' | sed -e "s|$GITHUB_PAGES_PULL_PATH||" >> file_destinations.txt
        readarray -t FILE_ORIGINS < file_origins.txt
        readarray -t FILE_DESTINATIONS < file_destinations.txt
        for i in "${!FILE_ORIGINS[@]}"; do
            echo "Copying ${FILE_ORIGINS[i]} to ${FILE_DESTINATIONS[i]}."
            mkdir -p ${FILE_DESTINATIONS[i]} && cp ${FILE_ORIGINS[i]} ${FILE_DESTINATIONS[i]}
        done
    done

    # Build Docker image needed to build the Hugo site
    cd ${STAGING_DIR}
    docker build -t cloudposse/docs .

    # publish the Hugo-generated HTML to $GITHUB_PAGES_PUSH_PATH
    make release
    make real-clean hugo/build
    cp -r ${HUGO_PUBLISH_DIR} ${GITHUB_PAGES_PUSH_PATH}
}

main

#    - run: entrypoint.sh
#      shell: bash
#    - run: ./actions/publish-github-pages/entrypoint.sh
